//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AHeadLib.Net.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AHeadLib.Net.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ; generated by tools
        ///; AHeadLib.Net
        ///; https://github.com/SakuraKoi/AHeadLib.Net
        ///; Powered by bodong | Modified by.SakuraKooi
        ///
        ///.DATA
        ///    ${EXTERNDEF_POINTERS}
        ///
        ///.CODE
        ///
        ///${FUNCTIONS}
        ///
        ///END
        ///.
        /// </summary>
        internal static string Asm_x64 {
            get {
                return ResourceManager.GetString("Asm_x64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ; generated by tools
        ///; AHeadLib.Net
        ///; https://github.com/SakuraKoi/AHeadLib.Net
        ///; Powered by bodong | Modified by.SakuraKooi
        ///
        ///.MODEL FLAT
        ///
        ///.DATA
        ///    ${EXTERNDEF_POINTERS}
        ///
        ///.CODE
        ///
        ///${FUNCTIONS}
        ///
        ///END
        ///.
        /// </summary>
        internal static string Asm_x86 {
            get {
                return ResourceManager.GetString("Asm_x86", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to // generated by tools
        /// // AHeadLib.Net
        /// // https://github.com/SakuraKoi/AHeadLib.Net
        /// // Powered by bodong | Modified by.SakuraKooi
        ///
        ///#include &lt;windows.h&gt;
        ///
        ///#if defined(_WIN64) || defined(_X64) || defined(WIN64) || defined( __LP64__ )
        ///#define AHEAD_LIB_DOT_NET_X64_BUILD 1
        ///#else
        ///#define AHEAD_LIB_DOT_NET_X64_BUILD 0
        ///#endif
        ///
        /// // checked get function in native dll
        ///static void* CheckedGetFunction(HMODULE module, const char* methodName)
        ///{
        ///    void* Result = GetProcAddress(module, methodName);
        ///
        ///    if (Result == NULL)
        ///    {
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CppHelper {
            get {
                return ResourceManager.GetString("CppHelper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // generated by tools
        /// // AHeadLib.Net
        /// // https://github.com/SakuraKoi/AHeadLib.Net
        /// // Powered by bodong | Modified by.SakuraKooi
        ///
        ///#include &lt;windows.h&gt;
        ///
        ///extern void CheckedLoad();
        ///extern void ExecuteUserCustomCodes();
        ///extern int ShouldExecuteAttachCode();
        ///
        ///BOOL WINAPI DllMain(
        ///    HINSTANCE hinstDLL,  // handle to DLL module
        ///    DWORD fdwReason,     // reason for calling function
        ///    LPVOID lpvReserved)  // reserved
        ///{
        ///    // Perform actions based on the reason for call [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DllMain {
            get {
                return ResourceManager.GetString("DllMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] solution {
            get {
                object obj = ResourceManager.GetObject("solution", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // generated by tools
        /// // AHeadLib.Net
        /// // https://github.com/SakuraKoi/AHeadLib.Net
        /// // Powered by bodong | Modified by.SakuraKooi
        ///
        ///#include &quot;MemoryPatchConfig.h&quot;
        ///#include &lt;cassert&gt;
        ///#include &lt;tchar.h&gt;
        ///
        ///#define STRINGIFY(x) #x
        ///#define TOSTRING(x) STRINGIFY(x)
        ///
        ///#define MESSAGE_RAISE_LOCATION __FILE__ &quot;(&quot; TOSTRING(__LINE__) &quot;): &quot;
        ///
        ///extern &quot;C&quot;
        ///{
        ///    // fill original library path here
        ///    // use absolute file path
        ///    void GetOriginalLibraryPath(TCHAR* bufferPtr, int bufferLength, const TCHAR* libName)
        ///    {
        ///        ass [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UserImplementations {
            get {
                return ResourceManager.GetString("UserImplementations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] vcxprojTemplate {
            get {
                object obj = ResourceManager.GetObject("vcxprojTemplate", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] vcxprojTemplate_filters {
            get {
                object obj = ResourceManager.GetObject("vcxprojTemplate_filters", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
